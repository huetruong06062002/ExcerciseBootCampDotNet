@page "/"

@using System.Text.Json;
@inject NavigationManager navigate;

<PageTitle>Index</PageTitle>

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">Shoes Store</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
      aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav">
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="#">Home</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Link</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Dropdown</a>
        </li>
      </ul>
      <form class="d-flex ms-auto">
        <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
        <button class="btn btn-outline-success" type="submit">Search</button>
      </form>
    </div>
  </div>
</nav>

<!-- Filters -->
<div class="container my-4">
  <div class="row">
    <div class="col-md-3">
      <h5>Brands</h5>
      <ul class="list-group">
        <li class="list-group-item"><input type="checkbox" id="adidas"> Adidas</li>
        <li class="list-group-item"><input type="checkbox" id="nike"> Nike</li>
        <li class="list-group-item"><input type="checkbox" id="converse"> Converse</li>
      </ul>
    </div>

    <!-- Products -->
    <div class="col-md-9">
      <div class="row">
        @foreach (ProductVM product in products)
        {
          <div class="col-md-4 mb-4">
            <div class="card">
              <img src="@product.ImgLink" class="card-img-top" alt="@product.Name">
              <div class="card-body">
                <h5 class="card-title">@product.Name</h5>
                <p class="card-text">Price: @product.Price</p>
                <a href="#" class="btn btn-primary">Detail</a>
              </div>
            </div>
          </div>
        }
      </div>
    </div>
  </div>
</div>



@code {
  HubConnection ProductHub;

  List<ProductVM> products = new List<ProductVM>();


  protected override async Task OnInitializedAsync()
  {
    ProductHub = new HubConnectionBuilder().WithUrl(navigate.ToAbsoluteUri("/product-hub")).Build();
    await ProductHub.StartAsync();

    ProductHub.On<List<ProductVM>>("GetAllProduct", async (lstProduct) =>
    {
      products = lstProduct;
      //Cập nhật lại giao diện khi tất cả các async khác chạy xong
      await InvokeAsync(StateHasChanged);
    });
  }

  private async Task Dispose()
  {
    //Ngắt kết nối
    ProductHub.StopAsync();
  }

}
