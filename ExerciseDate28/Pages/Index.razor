@page "/"

<PageTitle>Exercise date 28</PageTitle>

<div class="container text-center">
  <div class="card text-center bg-dark">
    <div class="card-body">
      <h1 class="card-title text-light">My Wallet</h1>
      <h2 class="text-warning">$@Balance</h2>
      <p class="text-muted text-light">Total balance</p>
      <button class="btn btn-success mx-2" data-bs-toggle="modal" data-bs-target="#modalId" @onclick="@(() =>{ 
        HandleChangeType("Deposit");
        HandleTransaction(transaction);
        })">Deposit</button>
      <button class="btn btn-danger mx-2" data-bs-toggle="modal" data-bs-target="#modalId" @onclick="@(() =>{ 
        HandleChangeType("Withdraw");
        HandleTransaction(transaction);
        })">Withdraw</button>

    </div>
  </div>
  <h4 class="text-dark mt-5">Transaction History</h4>
  <table class="table table-bordered">
    <thead>
      <tr>
        <th>STT</th>
        <th>Type</th>
        <th>Amout</th>
        <th>Date</th>
      </tr>
    </thead>
    <tbody>
      @foreach (Transaction transaction in transactions)
      {
        <tr class="@(transaction.Type == "Deposit" ? "table-success" : "table-danger")">
          <th>@Id</th>
          <td>@transaction.Type</td>
          <td>@transaction.Amount</td>
          <td>@(transaction.Date)</td>
        </tr>
      }
    </tbody>
  </table>
</div>

<Modal Balance="@Balance" TypeTransction="@TypeTransction" EnterMoney="@EnterMoney"
  OnHandleTransaction="HandleTransaction" />

@code {
  public static int Id = 0;
  public double Balance { get; set; } = 2499.73;
  public enum transactionsName
  {
    Deposit,
    Withdraw
  }

  public string TypeTransction { get; set; } = "Deposit";

  public double EnterMoney { get; set; } = 0;

  public List<Transaction> transactions { get; set; } = new List<Transaction>();

  public Transaction transaction { get; set; } = new Transaction();


  void HandleChangeType(string type)
  {
    TypeTransction = type;
  }

  void HandleTransaction(Transaction transaction)
  { 
    if (TypeTransction == "Deposit")
    {
      if (Balance < 0)
      {
        return;
      }
      Balance += transaction.Amount;
    }
    else
    {
      if (Balance < transaction.Amount)
      {
        return;
      }
      Balance -= transaction.Amount;
    }
    if (transaction.Type != "" && transaction.Amount > 0)
    {
      Id++;
      transactions.Add(transaction);
    }
  }


}